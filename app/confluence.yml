---
settings:
  artifacts-dir: results/confluence/%Y-%m-%d_%H-%M-%S
  aggregator: consolidator
  verbose: false
  env:
    application_hostname: test_confluence_instance.atlassian.com   # Confluence DC hostname without protocol and port e.g. test-confluence.atlassian.com or localhost
    application_protocol: http      # http or https
    application_port: 80            # 80, 443, 8080, 1990, etc
    secure: True                    # Set False to allow insecure connections, e.g. when using self-signed SSL certificate
    application_postfix:            # e.g. /confluence in case of url like http://localhost:1990/confluence
    admin_login: admin
    admin_password: admin
    load_executor: jmeter           # jmeter and locust are supported. jmeter by default.
    concurrency: 200                # number of concurrent virtual users for jmeter or locust scenario
    test_duration: 45m
    ramp-up: 5m                     # time to spin all concurrent users
    total_actions_per_hour: 20000
    WEBDRIVER_VISIBLE: False
    JMETER_VERSION: 5.4.2
    LANGUAGE: en_US.utf8
    allow_analytics: Yes            # Allow sending basic run analytics to Atlassian. These analytics help us to understand how the tool is being used and help us to continue to invest in this tooling. For more details please see our README.
    # Action percentage for JMeter and Locust load executors
    view_page: 46
    view_dashboard: 8
    view_blog: 10
    search_cql: 9
    create_blog: 3
    create_and_edit_page: 7
    comment_page: 6
    view_attachment: 4
    upload_attachment: 5
    like_page: 2
    standalone_extension: 0 # By default disabled
    # Custom dataset section.
    custom_dataset_query:           # Write CQL query to add CQL output to the app/datasets/confluence/custom_pages.csv, e.g. "title ~ 'AppPage*'"
services:
  - module: shellexec
    prepare:
      - python util/pre_run/environment_checker.py
      - python util/pre_run/check_for_updates.py
      - python util/data_preparation/confluence_prepare_data.py
    shutdown:
      - python util/post_run/jmeter_post_check.py
      - python util/jtl_convertor/jtls-to-csv.py kpi.jtl selenium.jtl
    post-process:
      - python util/analytics/analytics.py confluence
      - python util/post_run/cleanup_results_dir.py
  - module: pip-install
    packages:
      - selenium==3.141.0
execution:
  - scenario: ${load_executor}
    executor: ${load_executor}
    concurrency: ${concurrency}
    hold-for: ${test_duration}
    ramp-up: ${ramp-up}
  - scenario: selenium
    executor: selenium
    runner: pytest
    hold-for: ${test_duration}
scenarios:
  selenium:
    script: selenium_ui/confluence_ui.py
  locust:
    script: locustio/confluence/locustfile.py
  jmeter:
    script: jmeter/confluence.jmx
    properties:
      application_hostname: ${application_hostname}
      application_protocol: ${application_protocol}
      application_port: ${application_port}
      application_postfix: ${application_postfix}
      # Workload model
      total_actions_per_hr: ${total_actions_per_hour}
      perc_view_page: ${view_page}
      perc_view_dashboard: ${view_dashboard}
      perc_view_blog: ${view_blog}
      perc_search_cql: ${search_cql}
      perc_create_blog: ${create_blog}
      perc_create_and_edit_page: ${create_and_edit_page}
      perc_comment_page: ${comment_page}
      perc_view_attachment: ${view_attachment}
      perc_upload_attachment: ${upload_attachment}
      perc_like_page: ${like_page}
      perc_standalone_extension: ${standalone_extension}
modules:
  consolidator:
    rtimes-len: 0 # CONFSRVDEV-7631 reduce sampling
    percentiles: [] # CONFSRVDEV-7631 disable all percentiles due to Taurus's excessive memory usage
  jmeter:
    version: ${JMETER_VERSION}
    detect-plugins: true
    memory-xmx: 8G  # allow JMeter to use up to 8G of memory
    plugins:
      - bzm-parallel=0.4
      - bzm-random-csv=0.6
      - jpgc-casutg=2.5
      - jpgc-dummy=0.2
      - jpgc-ffw=2.0
      - jpgc-fifo=0.2
      - jpgc-functions=2.1
      - jpgc-json=2.6
      - jpgc-perfmon=2.1
      - jpgc-prmctl=0.4
      - jpgc-tst=2.4
      - jpgc-wsc=0.3
      - tilln-sshmon=1.0
      - jpgc-synthesis=2.2
    system-properties:
      server.rmi.ssl.disable: true
      java.rmi.server.hostname: localhost
      httpsampler.ignore_failed_embedded_resources: "true"
  selenium:
    chromedriver:
      version: "97.0.4692.71" # Supports Chrome version 97. You can refer to http://chromedriver.chromium.org/downloads
reporting:
- data-source: sample-labels
  module: junit-xml
