---
settings:
  artifacts-dir: results/bamboo/%Y-%m-%d_%H-%M-%S
  aggregator: consolidator
  verbose: false
  env:
    application_hostname: test-bamboo.atlassian.com   # Bamboo DC hostname without protocol and port e.g. test-bamboo.atlassian.com or localhost
    application_protocol: http         # http or https
    application_port: 80               # 80, 443, 8085, etc
    secure: True                       # Set False to allow insecure connections, e.g. when using self-signed SSL certificate
    application_postfix:               # e.g. /bamboo in case of url like http://localhost/bamboo
    admin_login: admin
    admin_password: admin
    load_executor: jmeter
    concurrency: 200                   # number of Bamboo users for Selenium actions
    test_duration: 45m
    ramp-up: 5m                        # time to spin all concurrent threads
    total_actions_per_hour: 2000       # number of total JMeter actions per hour
    WEBDRIVER_VISIBLE: False
    JMETER_VERSION: 5.4.2
    LANGUAGE: en_US.utf8
    allow_analytics: Yes               # Allow sending basic run analytics to Atlassian. These analytics help us to understand how the tool is being used and help us to continue to invest in this tooling. For more details please see our README.
    # Action percentage for JMeter load executor
    view_all_builds: 15
    view_build_result: 15
    view_build_configuration: 10
    view_job_configuration: 10
    view_build_summary: 10
    view_projects_list: 10
    standalone_extension: 0            # Standalone extension weight for JMeter. By default, disabled. Set appropriate weight to enable.
    # Locust app specific
    standalone_extension_locust: 0     # Standalone extension weight for Locust. By default, disabled. Set 1 to enable.
    # Bamboo agents and plans settings
    number_of_agents: 50               # number of available remote agents
    parallel_plans_count: 40           # number of parallel plans execution
    start_plan_timeout: 60             # maximum timeout of plan to start
    default_dataset_plan_duration: 60  # expected plan execution duration
services:
  - module: shellexec
    prepare:
      - python util/pre_run/environment_checker.py
      - python util/data_preparation/bamboo_prepare_data.py
    shutdown:
      - python util/post_run/jmeter_post_check.py
      - python util/jtl_convertor/jtls-to-csv.py kpi*.jtl selenium.jtl
    post-process:
      - python util/analytics/analytics.py bamboo
      - python util/post_run/cleanup_results_dir.py
  - module: pip-install
    packages:
      - selenium==3.141.0
execution:
  - scenario: jmeter
    executor: jmeter
    concurrency: ${concurrency}
    hold-for: ${test_duration}
    ramp-up: ${ramp-up}
  - scenario: locust
    executor: locust
    concurrency: ${parallel_plans_count}
    hold-for: ${test_duration}
    ramp-up: ${default_dataset_plan_duration}
## Locust app-specific scenario. Uncomment below lines to enable.
#  - scenario: locust_app_specific
#    executor: locust
#    concurrency: ${concurrency}
#    hold-for: ${test_duration}
#    ramp-up: ${ramp-up}
  - scenario: selenium
    executor: selenium
    runner: pytest
    hold-for: ${test_duration}
scenarios:
  selenium:
    script: selenium_ui/bamboo_ui.py
  locust:
    script: locustio/bamboo/locustfile.py
  locust_app_specific:
    script: locustio/bamboo/locustfile_app_specific.py
  jmeter:
    script: jmeter/bamboo.jmx
    properties:
      application_hostname: ${application_hostname}
      application_protocol: ${application_protocol}
      application_port: ${application_port}
      application_postfix: ${application_postfix}
      # Workload model
      total_actions_per_hr: ${total_actions_per_hour}
      perc_view_all_builds: ${view_all_builds}
      perc_view_build_result: ${view_build_result}
      perc_view_build_configuration: ${view_build_configuration}
      perc_view_job_configuration: ${view_job_configuration}
      perc_view_build_summary: ${view_build_summary}
      perc_view_projects_list: ${view_projects_list}
      perc_standalone_extension: ${standalone_extension}
modules:
  consolidator:
    rtimes-len: 0 # CONFSRVDEV-7631 reduce sampling
    percentiles: [] # CONFSRVDEV-7631 disable all percentiles due to Taurus's excessive memory usage
  jmeter:
    version: ${JMETER_VERSION}
    detect-plugins: true
    memory-xmx: 8G  # allow JMeter to use up to 8G of memory
    plugins:
      - bzm-parallel=0.4
      - bzm-random-csv=0.6
      - jpgc-casutg=2.5
      - jpgc-dummy=0.2
      - jpgc-ffw=2.0
      - jpgc-fifo=0.2
      - jpgc-functions=2.1
      - jpgc-json=2.6
      - jpgc-perfmon=2.1
      - jpgc-prmctl=0.4
      - jpgc-tst=2.4
      - jpgc-wsc=0.3
      - tilln-sshmon=1.0
      - jpgc-synthesis=2.2
    system-properties:
      server.rmi.ssl.disable: true
      java.rmi.server.hostname: localhost
      httpsampler.ignore_failed_embedded_resources: "true"
  selenium:
    chromedriver:
      version: "97.0.4692.71" # Supports Chrome version 97. You can refer to http://chromedriver.chromium.org/downloads
reporting:
- data-source: sample-labels
  module: junit-xml